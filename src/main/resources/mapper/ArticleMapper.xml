<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mwj.personweb.dao.IArtcileDao">
    <resultMap id="BaseResultMap" type="com.mwj.personweb.model.Article">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="articleId" property="articleid" jdbcType="BIGINT"/>
        <result column="author" property="author" jdbcType="VARCHAR"/>
        <result column="originalAuthor" property="originalauthor" jdbcType="VARCHAR"/>
        <result column="articleTitle" property="articletitle" jdbcType="VARCHAR"/>
        <result column="articleTags" property="articletags" jdbcType="VARCHAR"/>
        <result column="articleType" property="articletype" jdbcType="VARCHAR"/>
        <result column="articleCategories" property="articlecategories" jdbcType="VARCHAR"/>
        <result column="publishDate" property="publishdate" jdbcType="VARCHAR"/>
        <result column="updateDate" property="updatedate" jdbcType="VARCHAR"/>
        <result column="articleUrl" property="articleurl" jdbcType="VARCHAR"/>
        <result column="likes" property="likes" jdbcType="INTEGER"/>
        <result column="lastArticleId" property="lastarticleid" jdbcType="BIGINT"/>
        <result column="nextArticleId" property="nextarticleid" jdbcType="BIGINT"/>
        <result column="articleContent" property="articlecontent" jdbcType="LONGVARCHAR"/>
        <result column="articleTabloid" property="articletabloid" jdbcType="LONGVARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, articleId, author, originalAuthor, articleTitle, articleTags, articleType, articleCategories, 
    publishDate, updateDate, articleUrl, likes, lastArticleId, nextArticleId, articleContent, articleTabloid
  </sql>


    <select id="findAllArticles" resultType="com.mwj.personweb.model.Article">
       select
       articleId,author,articleTitle,articleType,
       publishDate,articleTabloid
       from
       article
       order by
       id
       desc
    </select>


    <select id="showArticleTitleDetailByArticleId" parameterType="java.lang.Long"
            resultType="com.mwj.personweb.model.Article">
       select
         *
         from
         article
         where
         articleId=#{articleId}
    </select>

    <select id="findAllArticlesPartInfo" resultType="com.mwj.personweb.model.Article">
    select
    articleId,originalAuthor,articleTitle,articleTags,
    articleType, articleCategories,publishDate
    from
    article
    order by
    id
    desc

    </select>

    <select id="findArticleByArchive" resultType="com.mwj.personweb.model.Article" parameterType="java.lang.String">
     select articleId,originalAuthor,articleTitle,articleTags,
     articleType,articleCategories,publishDate
     from
      article
       where
        publishDate
        like '%${archive}%' order by id desc

    </select>

    <select id="countArticles" resultType="java.lang.Integer">
         select count(*) from article
    </select>

    <select id="countArticleArchiveByArchive" resultType="java.lang.Integer" parameterType="java.lang.String">
        select count(*) from article where publishDate like '%${archive}%'
    </select>


    <select id="countArticleCategoryByCategory" resultType="java.lang.Integer" parameterType="java.lang.String">
       select count(*) from article where articleCategories=#{category}
    </select>


    <select id="newArticle" resultType="com.mwj.personweb.model.Article">
       select articleId,articleTitle from article ORDER BY publishDate desc limit 8
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from article
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insertArticle" parameterType="com.mwj.personweb.model.Article">
    insert into article (id, articleId, author, 
      originalAuthor, articleTitle, articleTags, 
      articleType, articleCategories, publishDate, 
      updateDate, articleUrl, likes, 
      lastArticleId, nextArticleId, articleContent, 
      articleTabloid)
    values (#{id,jdbcType=INTEGER}, #{articleId,jdbcType=BIGINT}, #{author,jdbcType=VARCHAR},
      #{originalAuthor,jdbcType=VARCHAR}, #{articleTitle,jdbcType=VARCHAR}, #{articleTags,jdbcType=VARCHAR},
      #{articleType,jdbcType=VARCHAR}, #{articleCategories,jdbcType=VARCHAR}, #{publishDate,jdbcType=VARCHAR},
      #{updateDate,jdbcType=VARCHAR}, #{articleUrl,jdbcType=VARCHAR}, #{likes,jdbcType=INTEGER},
      #{lastArticleId,jdbcType=BIGINT}, #{nextArticleId,jdbcType=BIGINT}, #{articleContent,jdbcType=LONGVARCHAR},
      #{articleTabloid,jdbcType=LONGVARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.mwj.personweb.model.Article">
        insert into article
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="articleid != null">
                articleId,
            </if>
            <if test="author != null">
                author,
            </if>
            <if test="originalauthor != null">
                originalAuthor,
            </if>
            <if test="articletitle != null">
                articleTitle,
            </if>
            <if test="articletags != null">
                articleTags,
            </if>
            <if test="articletype != null">
                articleType,
            </if>
            <if test="articlecategories != null">
                articleCategories,
            </if>
            <if test="publishdate != null">
                publishDate,
            </if>
            <if test="updatedate != null">
                updateDate,
            </if>
            <if test="articleurl != null">
                articleUrl,
            </if>
            <if test="likes != null">
                likes,
            </if>
            <if test="lastarticleid != null">
                lastArticleId,
            </if>
            <if test="nextarticleid != null">
                nextArticleId,
            </if>
            <if test="articlecontent != null">
                articleContent,
            </if>
            <if test="articletabloid != null">
                articleTabloid,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="articleid != null">
                #{articleid,jdbcType=BIGINT},
            </if>
            <if test="author != null">
                #{author,jdbcType=VARCHAR},
            </if>
            <if test="originalauthor != null">
                #{originalauthor,jdbcType=VARCHAR},
            </if>
            <if test="articletitle != null">
                #{articletitle,jdbcType=VARCHAR},
            </if>
            <if test="articletags != null">
                #{articletags,jdbcType=VARCHAR},
            </if>
            <if test="articletype != null">
                #{articletype,jdbcType=VARCHAR},
            </if>
            <if test="articlecategories != null">
                #{articlecategories,jdbcType=VARCHAR},
            </if>
            <if test="publishdate != null">
                #{publishdate,jdbcType=VARCHAR},
            </if>
            <if test="updatedate != null">
                #{updatedate,jdbcType=VARCHAR},
            </if>
            <if test="articleurl != null">
                #{articleurl,jdbcType=VARCHAR},
            </if>
            <if test="likes != null">
                #{likes,jdbcType=INTEGER},
            </if>
            <if test="lastarticleid != null">
                #{lastarticleid,jdbcType=BIGINT},
            </if>
            <if test="nextarticleid != null">
                #{nextarticleid,jdbcType=BIGINT},
            </if>
            <if test="articlecontent != null">
                #{articlecontent,jdbcType=LONGVARCHAR},
            </if>
            <if test="articletabloid != null">
                #{articletabloid,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateArticleBpar" parameterType="com.mwj.personweb.model.Article">
        update article
        <set>
            <if test="articleid != null">
                articleId = #{articleid,jdbcType=BIGINT},
            </if>
            <if test="author != null">
                author = #{author,jdbcType=VARCHAR},
            </if>
            <if test="originalauthor != null">
                originalAuthor = #{originalauthor,jdbcType=VARCHAR},
            </if>
            <if test="articletitle != null">
                articleTitle = #{articletitle,jdbcType=VARCHAR},
            </if>
            <if test="articletags != null">
                articleTags = #{articletags,jdbcType=VARCHAR},
            </if>
            <if test="articletype != null">
                articleType = #{articletype,jdbcType=VARCHAR},
            </if>
            <if test="articlecategories != null">
                articleCategories = #{articlecategories,jdbcType=VARCHAR},
            </if>
            <if test="publishdate != null">
                publishDate = #{publishdate,jdbcType=VARCHAR},
            </if>
            <if test="updatedate != null">
                updateDate = #{updatedate,jdbcType=VARCHAR},
            </if>
            <if test="articleurl != null">
                articleUrl = #{articleurl,jdbcType=VARCHAR},
            </if>
            <if test="likes != null">
                likes = #{likes,jdbcType=INTEGER},
            </if>
            <if test="lastarticleid != null">
                lastArticleId = #{lastarticleid,jdbcType=BIGINT},
            </if>
            <if test="nextarticleid != null">
                nextArticleId = #{nextarticleid,jdbcType=BIGINT},
            </if>
            <if test="articlecontent != null">
                articleContent = #{articlecontent,jdbcType=LONGVARCHAR},
            </if>
            <if test="articletabloid != null">
                articleTabloid = #{articletabloid,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.mwj.personweb.model.Article">
    update article
    set articleId = #{articleid,jdbcType=BIGINT},
      author = #{author,jdbcType=VARCHAR},
      originalAuthor = #{originalauthor,jdbcType=VARCHAR},
      articleTitle = #{articletitle,jdbcType=VARCHAR},
      articleTags = #{articletags,jdbcType=VARCHAR},
      articleType = #{articletype,jdbcType=VARCHAR},
      articleCategories = #{articlecategories,jdbcType=VARCHAR},
      publishDate = #{publishdate,jdbcType=VARCHAR},
      updateDate = #{updatedate,jdbcType=VARCHAR},
      articleUrl = #{articleurl,jdbcType=VARCHAR},
      likes = #{likes,jdbcType=INTEGER},
      lastArticleId = #{lastarticleid,jdbcType=BIGINT},
      nextArticleId = #{nextarticleid,jdbcType=BIGINT},
      articleContent = #{articlecontent,jdbcType=LONGVARCHAR},
      articleTabloid = #{articletabloid,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <update id="updateByPrimaryKey" parameterType="com.mwj.personweb.model.Article">
    update article
    set articleId = #{articleid,jdbcType=BIGINT},
      author = #{author,jdbcType=VARCHAR},
      originalAuthor = #{originalauthor,jdbcType=VARCHAR},
      articleTitle = #{articletitle,jdbcType=VARCHAR},
      articleTags = #{articletags,jdbcType=VARCHAR},
      articleType = #{articletype,jdbcType=VARCHAR},
      articleCategories = #{articlecategories,jdbcType=VARCHAR},
      publishDate = #{publishdate,jdbcType=VARCHAR},
      updateDate = #{updatedate,jdbcType=VARCHAR},
      articleUrl = #{articleurl,jdbcType=VARCHAR},
      likes = #{likes,jdbcType=INTEGER},
      lastArticleId = #{lastarticleid,jdbcType=BIGINT},
      nextArticleId = #{nextarticleid,jdbcType=BIGINT}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <update id="updateArticleById" parameterType="com.mwj.personweb.model.Article">
        update
        article
        set
        originalAuthor=#{originalAuthor},articleTitle=#{articleTitle},updateDate=#{updateDate},
        articleContent=#{articleContent},articleTags=#{articleTags},articleType=#{articleType},
        articleCategories=#{articleCategories},articleUrl=#{articleUrl},articleTabloid=#{articleTabloid},
         commentsNum=#{commentsNum},authorId=#{authorId},ownerId=#{ownerId}
         where
         id=#{id}


    </update>
</mapper>